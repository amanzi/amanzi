name: Amanzi CI

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - amanzi-*

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04-arm ]
    runs-on: ${{ matrix.os }}
    name: Build Docker container
    steps:
    - name: Check out the Amanzi repo
      uses: actions/checkout@v4
    - name: Extract the branch name
      id: branch
      run:
        echo "AMANZI_BRANCH=$GITHUB_REF_NAME" >> $GITHUB_ENV
    - name: Filter the branch name to generate a tag for Docker
      id: tag
      run:
        echo "AMANZI_BRANCH_TAG=$(echo ${{env.AMANZI_BRANCH}} | sed -e 's/\//--/g')" >> $GITHUB_ENV
    - name: Output the branch name
      run:
        echo "Amanzi Branch = ${{env.AMANZI_BRANCH}}"
    - name: Get TPLs version
      id: version
      working-directory: Docker
      run:
        echo "AMANZI_TPLS_VER=$(./get_tpls_version.sh)" >> $GITHUB_ENV
    - name: Output the TPLs version
      run:
        echo "TPLs version = ${{env.AMANZI_TPLS_VER}}"
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_PASSWORD}}
    - name: Docker build
      id: docker
      working-directory: Docker
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          docker build --build-arg ARCH=linux/amd64 --build-arg amanzi_branch=${{env.AMANZI_BRANCH}} --build-arg amanzi_tpls_ver=${{env.AMANZI_TPLS_VER}} -t metsi/amanzi:${{env.AMANZI_BRANCH_TAG}}-amd64-latest -f Dockerfile-Amanzi-build .
          docker push ${{secrets.DOCKERHUB_USERNAME}}/amanzi:${{env.AMANZI_BRANCH_TAG}}-amd64-latest
        else
          docker build --build-arg ARCH=linux/arm64 --build-arg amanzi_branch=${{env.AMANZI_BRANCH}} --build-arg amanzi_tpls_ver=${{env.AMANZI_TPLS_VER}} -t metsi/amanzi:${{env.AMANZI_BRANCH_TAG}}-arm64-latest -f Dockerfile-Amanzi-build .
          docker push ${{secrets.DOCKERHUB_USERNAME}}/amanzi:${{env.AMANZI_BRANCH_TAG}}-arm64-latest
        fi
  fix-manifest:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Check out the Amanzi repo
        uses: actions/checkout@v4
      - name: Set environment variables
        run:
          echo "AMANZI_BRANCH_TAG=$(echo $GITHUB_REF_NAME | sed -e 's/\//--/g')" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Edit manifest
        run: |
          docker manifest create ${{secrets.DOCKERHUB_USERNAME}}/amanzi:${{env.AMANZI_BRANCH_TAG}}-latest \
            --amend ${{secrets.DOCKERHUB_USERNAME}}/amanzi:${{env.AMANZI_BRANCH_TAG}}-arm64-latest \
            --amend ${{secrets.DOCKERHUB_USERNAME}}/amanzi:${{env.AMANZI_BRANCH_TAG}}-amd64-latest
          docker push ${{secrets.DOCKERHUB_USERNAME}}/amanzi:${{env.AMANZI_BRANCH_TAG}}-latest
  serial-tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04-arm ]
    runs-on: ${{ matrix.os }}
    name: serial tests
    needs: fix-manifest
    steps:
    - name: Check out the Amanzi repo
      uses: actions/checkout@v4
    - name: Set environment variables
      run:
        echo "AMANZI_BRANCH_TAG=$(echo $GITHUB_REF_NAME | sed -e 's/\//--/g')" >> $GITHUB_ENV
    - name: Run tests
      id: tests
      working-directory: Docker
      run:
        docker run --rm ${{secrets.DOCKERHUB_USERNAME}}/amanzi:${{env.AMANZI_BRANCH_TAG}}-latest /bin/bash -c "cd ~/amanzi_builddir/amanzi; ctest -L SERIAL --output-on-failure"
  parallel-tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04-arm ]
    runs-on: ${{ matrix.os }}
    name: parallel tests
    needs: fix-manifest
    steps:
    - name: Check out the Amanzi repo
      uses: actions/checkout@v4
    - name: Set environment variables
      run:
        echo "AMANZI_BRANCH_TAG=$(echo $GITHUB_REF_NAME | sed -e 's/\//--/g')" >> $GITHUB_ENV
    - name: Run tests
      id: tests
      working-directory: Docker
      run:
        docker run --rm ${{secrets.DOCKERHUB_USERNAME}}/amanzi:${{env.AMANZI_BRANCH_TAG}}-latest /bin/bash -c "cd ~/amanzi_builddir/amanzi; ctest -L PARALLEL --output-on-failure"

