#FROM ubuntu:latest
#FROM ubuntu:artful
#FROM ubuntu:bionic
FROM ubuntu:focal


LABEL Description="This image contains all of the third-party libraries needed by Amanzi (based on the specified branch, default branch is master)."

# MPI flavor (mpich|openmpi)
ARG mpi_flavor=mpich

# Set timezone:
RUN ln -snf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime && echo $CONTAINER_TIMEZONE > /etc/timezone

RUN apt-get -q update -y && apt-get install -y tzdata && apt-get -q install -y \
  apt-utils \
  cmake \
  curl \
  libcurl4-openssl-dev \
  emacs \
  g++ \
  gfortran \
  git \
  groff \
  libblas-dev \
  liblapacke-dev \
  liblapack-dev \
  lib${mpi_flavor}-dev \
  libssl-dev \
  m4 \
  make \
  openssl \
  python3 \
  python3-distutils \
  python3-pip \
  python-is-python3 \
  rsync \
  wget \
  zlib1g-dev \
  && apt-get clean

# Note this installs numpy as well
RUN pip3 install --no-cache-dir --upgrade pip && \
    pip3 install --no-cache-dir install h5py

# Versions change and we cannot set environment variables from command output.
ARG petsc_ver
ARG trilinos_ver
ARG amanzi_branch=master

# Installation paths
ENV AMANZI_PREFIX=/home/amanzi_user/install \
    AMANZI_INSTALL_DIR=/home/amanzi_user/install/amanzi \
    AMANZI_TPLS_DIR=/home/amanzi_user/install/tpls

# TPL versions needed for LD_LIBRARY_PATH
ENV AMANZI_PETSC_LIBS=$AMANZI_TPLS_DIR/petsc-${petsc_ver}/lib \ 
    AMANZI_TRILINOS_LIBS=$AMANZI_TPLS_DIR/trilinos-${trilinos_ver}/lib \
    AMANZI_SEACAS_LIBS=$AMANZI_TPLS_DIR/SEACAS/lib

# Add an unprivileged user and group: amanzi_user, amanzi_user
RUN groupadd -r amanzi_user \
  && useradd -r -m -g amanzi_user amanzi_user
USER amanzi_user

# Set the current working directory as the users home directory
# (creates teh directory if it doesn't exist)
WORKDIR /home/amanzi_user

# ENV https_proxy=proxyout.lanl.gov:8080 \
#     http_proxy=proxyout.lanl.gov:8080

# Clone the amanzi git repo.
RUN git clone https://github.com/amanzi/amanzi.git

# Set the current working directory to the git repo
# and switch branches if requested.
WORKDIR /home/amanzi_user/amanzi
RUN if [ "$amanzi_branch" != "master" ]; then \
       git checkout $amanzi_branch; \
    fi; \
    echo "Amanzi branch = $amanzi_branch"; \
    git branch --list 

# Build and install the TPLs using bootstrap.sh, and remove
# the source, objects, etc. after installation to save space.
RUN ./bootstrap.sh --prefix=${AMANZI_PREFIX} \
  --parallel=4 --opt \
  --amanzi-build-dir=/home/amanzi_user/amanzi_builddir/amanzi \
  --tpl-build-dir=/home/amanzi_user/amanzi_builddir/tpls \
  --tpl-download-dir=/home/amanzi_user/amanzi_builddir/tpls/Downloads \
  --disable-build_amanzi --disable-build_user_guide \
  --enable-shared --enable-structured --enable-silo \
  --enable-alquimia --enable-pflotran --enable-crunchtope \
  --enable-pf_clm \
  --with-mpi=/usr \
  && git checkout master \
  && rm -r /home/amanzi_user/amanzi_builddir

# Set the LD_LIBRARY_PATH for Amanzi builds in the next stage
ENV LD_LIBRARY_PATH=${AMANZI_TPLS_DIR}/lib:${AMANZI_PETSC_LIBS}:${AMANZI_TRILINOS_LIBS}:${AMANZI_SEACAS_LIBS}
RUN echo $LD_LIBRARY_PATH

# Set path to pick up any tools installed during bootstrap
ENV PATH=/home/amanzi_user/amanzi/install/tools/bin:${PATH}
RUN echo $PATH

# Unset proxy
# ENV https_proxy= \
#    http_proxy= 


