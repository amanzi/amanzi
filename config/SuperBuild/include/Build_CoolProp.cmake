#  -*- mode: cmake -*-

#
# Build TPL: COOLPROP
#   
# --- Define all the directories and common external project flags
define_external_project_args(COOLPROP
                             TARGET coolprop
                             DEPENDS )

# add version to the autogenerated tpl_versions.h file
include(${SuperBuild_SOURCE_DIR}/TPLVersions.cmake)
amanzi_tpl_version_write(FILENAME ${TPL_VERSIONS_INCLUDE_FILE}
                         PREFIX COOLPROP
                         VERSION ${ALQUIMIA_VERSION_MAJOR} ${ALQUIMIA_VERSION_MINOR} ${ALQUIMIA_VERSION_PATCH})

# --- Patch the original code
set(COOLPROP_patch_file coolprop-cmake.patch)
                       
set(COOLPROP_sh_patch ${COOLPROP_prefix_dir}/coolprop-patch-step.sh)
configure_file(${SuperBuild_TEMPLATE_FILES_DIR}/coolprop-patch-step.sh.in
               ${COOLPROP_sh_patch}
               @ONLY)
# configure the CMake patch step
set(COOLPROP_cmake_patch ${COOLPROP_prefix_dir}/coolprop-patch-step.cmake)
configure_file(${SuperBuild_TEMPLATE_FILES_DIR}/coolprop-patch-step.cmake.in
               ${COOLPROP_cmake_patch}
               @ONLY)
# set the patch command
set(COOLPROP_PATCH_COMMAND ${CMAKE_COMMAND} -P ${COOLPROP_cmake_patch})

# --- Define the arguments passed to CMake.

set(COOLPROP_CMAKE_ARGS 
      "-DCMAKE_INSTALL_PREFIX:FILEPATH=${TPL_INSTALL_PREFIX}"
      "-DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}"
      "-DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}"
      "-DCOOLPROP_SHARED_LIBRARY:BOOL=ON"
      "-DCOOLPROP_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}/coolprop"
      "-DMPI_PREFIX=${MPI_PREFIX}")

# --- Override minimum version
if(CMAKE_MAJOR_VERSION VERSION_EQUAL "4")
  list(APPEND COOLPROP_CMAKE_ARGS "-DCMAKE_POLICY_VERSION_MINIMUM:STRING=3.5")
endif()


# --- Add external project build and tie to the COOLPROP build target
ExternalProject_Add(${COOLPROP_BUILD_TARGET}
                    DEPENDS   ${COOLPROP_PACKAGE_DEPENDS}         # Package dependency target
                    TMP_DIR   ${COOLPROP_tmp_dir}                 # Temporary files directory
                    STAMP_DIR ${COOLPROP_stamp_dir}               # Timestamp and log directory
                    # -- Download and GIT definition
                    GIT_REPOSITORY ${COOLPROP_GIT_REPOSITORY_TEMP}              
                    GIT_TAG        ${COOLPROP_GIT_TAG}   
                    # -- Patch
                    PATCH_COMMAND ${COOLPROP_PATCH_COMMAND}       # Mods to source
                    # -- Configure
                    SOURCE_DIR    ${COOLPROP_source_dir}          # Source directory
                    CMAKE_ARGS    ${AMANZI_CMAKE_CACHE_ARGS}      # Ensure uniform build
                                  ${COOLPROP_CMAKE_ARGS}
                                  -DCMAKE_C_FLAGS:STRING=${Amanzi_COMMON_CFLAGS}  # Ensure uniform build
                                  -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER}
                                  -DCMAKE_CXX_FLAGS:STRING=${Amanzi_COMMON_CXXFLAGS}  # Ensure uniform build
                                  -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER}
                    # -- Build
                    BINARY_DIR        ${COOLPROP_build_dir}       # Build directory 
                    BUILD_COMMAND     $(MAKE)
                    # -- Install
                    INSTALL_DIR      ${TPL_INSTALL_PREFIX}/coolprop  # Install directory
                    INSTALL_COMMAND  $(MAKE) install
                    # -- Output control
                    # -- Output control
                    ${COOLPROP_logging_args})

include(BuildLibraryName)
build_library_name(coolprop COOLPROP_C_LIB APPEND_PATH ${TPL_INSTALL_PREFIX}/lib)
set(COOLPROP_INSTALL_PREFIX ${TPL_INSTALL_PREFIX}/coolprop)
