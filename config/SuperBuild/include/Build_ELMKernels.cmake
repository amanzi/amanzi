#  -*- mode: cmake -*-

#
# Build TPL:  ELMKERNELS
#   
# --- Define all the directories and common external project flags
define_external_project_args(ELMKernels
                             TARGET ELMKernels)
# --- Define all the directories and common external project flags
define_external_project_args(ELMKERNELS
                             TARGET ELMKernels
                             DEPENDS Kokkos)

# add version to the autogenerated tpl_versions.h file
include(${SuperBuild_SOURCE_DIR}/TPLVersions.cmake)
amanzi_tpl_version_write(FILENAME ${TPL_VERSIONS_INCLUDE_FILE}
                         PREFIX ELMKERNELS
                         VERSION 0.1)

# --- Define the arguments passed to CMake.
# NOTE: hard-coded Debug here is necessary until ELMKernels are safely working...

-DBUILD_SHARED_LIBS:BOOL=true \
    -DSOURCE_PATH:FILEPATH=`pwd`/../ \
    -DCMAKE_INSTALL_PREFIX:FILEPATH=`pwd`/../install \
    -DCMAKE_BUILD_TYPE:STRING=Debug \
    -DKokkos_ROOT:FILEPATH=${_DIR} \
    -DENABLE_KOKKOS:BOOL=ON \
    -DENABLE_TESTS:BOOL=ON \
    -DELM_INPUT_DATA_PREFIX:FILEPATH=${ELM_INPUT_DIR}

set(ELMKERNELS_CMAKE_ARGS 
      "-DCMAKE_INSTALL_PREFIX:FILEPATH=${TPL_INSTALL_PREFIX}"
      "-DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS}"
      "-DCMAKE_BUILD_TYPE:=Debug")

# --- Add external project build and tie to the ELMKernels build target
ExternalProject_Add(${ELMKERNELS_BUILD_TARGET}
                    DEPENDS   ${ELMKERNELS_PACKAGE_DEPENDS}           # Package dependency target
                    TMP_DIR   ${ELMKERNELS_tmp_dir}                   # Temporary files directory
                    STAMP_DIR ${ELMKERNELS_stamp_dir}                 # Timestamp and log directory
                    # -- Download and URL definitions     
                    DOWNLOAD_DIR   ${TPL_DOWNLOAD_DIR}
                    URL            ${ELMKERNELS_URL}                  # URL may be a web site OR a local file
                    URL_MD5        ${ELMKERNELS_MD5_SUM}              # md5sum of the archive file
                    DOWNLOAD_NAME  ${ELMKERNELS_SAVEAS_FILE}          # file name to store (if not end of URL)
                    # -- Configure
                    SOURCE_DIR    ${ELMKERNELS_source_dir}            # Source directory
                    CMAKE_ARGS    ${AMANZI_CMAKE_CACHE_ARGS}   # Global definitions from root CMakeList
                                  ${ELMKERNELS_CMAKE_ARGS}
                                  -DCMAKE_C_FLAGS:STRING=${Amanzi_COMMON_CFLAGS}  # Ensure uniform build
                                  -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER}
                                  -DCMAKE_Fortran_COMPILER:FILEPATH=${CMAKE_Fortran_COMPILER}
                    # -- Build
                    BINARY_DIR       ${ELMKERNELS_build_dir}          # Build directory 
                    BUILD_COMMAND    $(MAKE) VERBOSE=1
                    # -- Install
                    INSTALL_DIR      ${TPL_INSTALL_PREFIX}     # Install directory
                    INSTALL_COMMAND  $(MAKE) install
                    # -- Output control
                    ${ELMKERNELS_logging_args})

include(BuildLibraryName)
build_library_name(ELMKernels ELMKERNELS_LIB APPEND_PATH ${TPL_INSTALL_PREFIX}/lib)
set(ELMKERNELS_INCLUDE_DIRS ${TPL_INSTALL_PREFIX}/include)
set(ELMKERNELS_DIR ${TPL_INSTALL_PREFIX})
