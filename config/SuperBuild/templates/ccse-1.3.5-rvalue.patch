diff -ruNbB ccse-1.3.5-source/Src/C_AMRLib/AmrLevel.cpp ccse-1.3.5-rvalue/Src/C_AMRLib/AmrLevel.cpp
--- ccse-1.3.5-source/Src/C_AMRLib/AmrLevel.cpp	2016-02-18 19:15:45.000000000 -0700
+++ ccse-1.3.5-rvalue/Src/C_AMRLib/AmrLevel.cpp	2020-05-02 21:54:43.000000000 -0600
@@ -1443,13 +1443,22 @@
 			       dlo,dhi,dom_lo,dom_hi,dx,xlo,&time,&dt,bcr,
 			       &level,&grid_no);
 	    } else if (rec->derFunc3D() != static_cast<DeriveFunc3D>(0)){
-		rec->derFunc3D()(ddat,ARLIM_3D(dlo),ARLIM_3D(dhi),&n_der,
-				 cdat,ARLIM_3D(clo),ARLIM_3D(chi),&n_state,
-				 ARLIM_3D(dlo),ARLIM_3D(dhi),
-				 ARLIM_3D(dom_lo),ARLIM_3D(dom_hi),
-				 ZFILL(dx),ZFILL(xlo),
+                int dlo_tmp[3] = ARLIM_3D(dlo);
+                int dhi_tmp[3] = ARLIM_3D(dhi);
+                int clo_tmp[3] = ARLIM_3D(clo);
+                int chi_tmp[3] = ARLIM_3D(chi);
+                int dom_lo_tmp[3] = ARLIM_3D(dom_lo);
+                int dom_hi_tmp[3] = ARLIM_3D(dom_hi);
+                Real dx_tmp[3] = ZFILL(dx);
+                Real xlo_tmp[3] = ZFILL(xlo);
+                int bcr_tmp[6] = BCREC_3D(bcr);
+		rec->derFunc3D()(ddat,dlo_tmp,dhi_tmp,&n_der,
+				 cdat,clo_tmp,chi_tmp,&n_state,
+				 dlo_tmp,dhi_tmp,
+				 dom_lo_tmp,dom_hi_tmp,
+				 dx_tmp,xlo_tmp,
 				 &time,&dt,
-				 BCREC_3D(bcr),
+				 bcr_tmp,
 				 &level,&grid_no);
 	    } else {
 		BoxLib::Error("AmeLevel::derive: no function available");
@@ -1575,13 +1584,22 @@
 			       dlo,dhi,dom_lo,dom_hi,dx,xlo,&time,&dt,bcr,
 			       &level,&idx);
 	    } else if (rec->derFunc3D() != static_cast<DeriveFunc3D>(0)){
-		rec->derFunc3D()(ddat,ARLIM_3D(dlo),ARLIM_3D(dhi),&n_der,
-				 cdat,ARLIM_3D(clo),ARLIM_3D(chi),&n_state,
-				 ARLIM_3D(dlo),ARLIM_3D(dhi),
-				 ARLIM_3D(dom_lo),ARLIM_3D(dom_hi),
-				 ZFILL(dx),ZFILL(xlo),
+                int clo_tmp[3] = ARLIM_3D(clo);
+                int chi_tmp[3] = ARLIM_3D(chi);
+                int dlo_tmp[3] = ARLIM_3D(dlo);
+                int dhi_tmp[3] = ARLIM_3D(dhi);
+                int dom_lo_tmp[3] = ARLIM_3D(dom_lo);
+                int dom_hi_tmp[3] = ARLIM_3D(dom_hi);
+                Real dx_tmp[3] = ZFILL(dx);
+                Real xlo_tmp[3] = ZFILL(xlo);
+                int bcr_tmp[6] = BCREC_3D(bcr);
+		rec->derFunc3D()(ddat,dlo_tmp,dhi_tmp,&n_der,
+				 cdat,clo_tmp,chi_tmp,&n_state,
+				 dlo_tmp,dhi_tmp,
+				 dom_lo_tmp,dom_hi_tmp,
+				 dx_tmp,xlo_tmp,
 				 &time,&dt,
-				 BCREC_3D(bcr),
+				 bcr_tmp,
 				 &level,&idx);
 	    } else {
 		BoxLib::Error("AmeLevel::derive: no function available");
diff -ruNbB ccse-1.3.5-source/Src/C_AMRLib/ErrorList.cpp ccse-1.3.5-rvalue/Src/C_AMRLib/ErrorList.cpp
--- ccse-1.3.5-source/Src/C_AMRLib/ErrorList.cpp	2016-02-18 19:15:45.000000000 -0700
+++ ccse-1.3.5-rvalue/Src/C_AMRLib/ErrorList.cpp	2020-05-02 21:33:50.000000000 -0600
@@ -61,9 +61,20 @@
 {
     BL_ASSERT(m_func3D != 0);
 
-    m_func3D(tag,ARLIM_3D(tlo),ARLIM_3D(thi),
-             tagval,clearval,data,ARLIM_3D(dlo),ARLIM_3D(dhi),ARLIM_3D(lo),ARLIM_3D(hi),nvar,
-             ARLIM_3D(domain_lo),ARLIM_3D(domain_hi),ZFILL(dx),ZFILL(xlo),ZFILL(prob_lo),time,level);
+    int tlo_tmp[3] = ARLIM_3D(tlo);
+    int thi_tmp[3] = ARLIM_3D(thi);
+    int dlo_tmp[3] = ARLIM_3D(dlo);
+    int dhi_tmp[3] = ARLIM_3D(dhi);
+    int lo_tmp[3] = ARLIM_3D(lo);
+    int hi_tmp[3] = ARLIM_3D(hi);
+    int domain_lo_tmp[3] = ARLIM_3D(domain_lo);
+    int domain_hi_tmp[3] = ARLIM_3D(domain_hi);
+    Real dx_tmp[3] = ZFILL(dx);
+    Real xlo_tmp[3] = ZFILL(xlo);
+    Real prob_lo_tmp[3] = ZFILL(prob_lo);
+    m_func3D(tag,tlo_tmp,thi_tmp,
+             tagval,clearval,data,dlo_tmp,dhi_tmp,lo_tmp,hi_tmp,nvar,
+             domain_lo_tmp,domain_hi_tmp,dx_tmp,xlo_tmp,prob_lo_tmp,time,level);
 }  
 
 
diff -ruNbB ccse-1.3.5-source/Src/C_AMRLib/StateDescriptor.cpp ccse-1.3.5-rvalue/Src/C_AMRLib/StateDescriptor.cpp
--- ccse-1.3.5-source/Src/C_AMRLib/StateDescriptor.cpp	2016-02-18 19:15:45.000000000 -0700
+++ ccse-1.3.5-rvalue/Src/C_AMRLib/StateDescriptor.cpp	2020-05-02 21:47:50.000000000 -0600
@@ -86,18 +86,32 @@
 
     bool thread_safe = bf_thread_safety(lo, hi, dom_lo, dom_hi, bc, 1);
     if (thread_safe) {
-      if (m_func != 0)
+      if (m_func != 0) {
 	m_func(data,ARLIM(lo),ARLIM(hi),dom_lo,dom_hi,dx,grd_lo,time,bc);
-      else
-	m_func3D(data,ARLIM_3D(lo),ARLIM_3D(hi),ARLIM_3D(dom_lo),ARLIM_3D(dom_hi),ZFILL(dx),ZFILL(grd_lo),time,bc);
+      } else {
+        int lo_tmp[3] = ARLIM_3D(lo);
+        int hi_tmp[3] = ARLIM_3D(hi);
+        int dom_lo_tmp[3] = ARLIM_3D(dom_lo);
+        int dom_hi_tmp[3] = ARLIM_3D(dom_hi);
+        Real dx_tmp[3] = ZFILL(dx);
+        Real grd_lo_tmp[3] = ZFILL(grd_lo);
+	m_func3D(data,lo_tmp,hi_tmp,dom_lo_tmp,dom_hi_tmp,dx_tmp,grd_lo_tmp,time,bc);
+      }
     } else {
 #ifdef _OPENMP
 #pragma omp critical (bndryfunc)
 #endif
-      if (m_func != 0)
+      if (m_func != 0) {
 	m_func(data,ARLIM(lo),ARLIM(hi),dom_lo,dom_hi,dx,grd_lo,time,bc);
-      else
-	m_func3D(data,ARLIM_3D(lo),ARLIM_3D(hi),ARLIM_3D(dom_lo),ARLIM_3D(dom_hi),ZFILL(dx),ZFILL(grd_lo),time,bc);
+      } else {
+        int lo_tmp[3] = ARLIM_3D(lo);
+        int hi_tmp[3] = ARLIM_3D(hi);
+        int dom_lo_tmp[3] = ARLIM_3D(dom_lo);
+        int dom_hi_tmp[3] = ARLIM_3D(dom_hi);
+        Real dx_tmp[3] = ZFILL(dx);
+        Real grd_lo_tmp[3] = ZFILL(grd_lo);
+	m_func3D(data,lo_tmp,hi_tmp,dom_lo_tmp,dom_hi_tmp,dx_tmp,grd_lo_tmp,time,bc);
+      }
     }
 }
 
@@ -111,18 +125,32 @@
 
     bool thread_safe = bf_thread_safety(lo, hi, dom_lo, dom_hi, bc, ng);
     if (thread_safe) {
-        if (m_gfunc != 0)
+        if (m_gfunc != 0) {
 	  m_gfunc(data,ARLIM(lo),ARLIM(hi),dom_lo,dom_hi,dx,grd_lo,time,bc);
-	else
-	  m_gfunc3D(data,ARLIM_3D(lo),ARLIM_3D(hi),ARLIM_3D(dom_lo),ARLIM_3D(dom_hi),ZFILL(dx),ZFILL(grd_lo),time,bc);
+	} else {
+          int lo_tmp[3] = ARLIM_3D(lo);
+          int hi_tmp[3] = ARLIM_3D(hi);
+          int dom_lo_tmp[3] = ARLIM_3D(dom_lo);
+          int dom_hi_tmp[3] = ARLIM_3D(dom_hi);
+          Real dx_tmp[3] = ZFILL(dx);
+          Real grd_lo_tmp[3] = ZFILL(grd_lo);
+	  m_gfunc3D(data,lo_tmp,hi_tmp,dom_lo_tmp,dom_hi_tmp,dx_tmp,grd_lo_tmp,time,bc);
+        }
     } else {
 #ifdef _OPENMP
 #pragma omp critical (bndryfunc)
 #endif
-        if (m_gfunc != 0)
+        if (m_gfunc != 0) {
 	  m_gfunc(data,ARLIM(lo),ARLIM(hi),dom_lo,dom_hi,dx,grd_lo,time,bc);
-	else
-	  m_gfunc3D(data,ARLIM_3D(lo),ARLIM_3D(hi),ARLIM_3D(dom_lo),ARLIM_3D(dom_hi),ZFILL(dx),ZFILL(grd_lo),time,bc);
+	} else {
+          int lo_tmp[3] = ARLIM_3D(lo);
+          int hi_tmp[3] = ARLIM_3D(hi);
+          int dom_lo_tmp[3] = ARLIM_3D(dom_lo);
+          int dom_hi_tmp[3] = ARLIM_3D(dom_hi);
+          Real dx_tmp[3] = ZFILL(dx);
+          Real grd_lo_tmp[3] = ZFILL(grd_lo);
+	  m_gfunc3D(data,lo_tmp,hi_tmp,dom_lo_tmp,dom_hi_tmp,dx_tmp,grd_lo_tmp,time,bc);
+        }
     }
 }
 
diff -ruNbB ccse-1.3.5-source/Src/C_BaseLib/ArrayLim.H ccse-1.3.5-rvalue/Src/C_BaseLib/ArrayLim.H
--- ccse-1.3.5-source/Src/C_BaseLib/ArrayLim.H	2016-02-18 19:15:45.000000000 -0700
+++ ccse-1.3.5-rvalue/Src/C_BaseLib/ArrayLim.H	2020-05-02 21:17:21.000000000 -0600
@@ -26,9 +26,9 @@
 #elif   BL_SPACEDIM==2
 #define ARLIM_P(x)  const int&,const int&
 #define ARLIM(x)  x[0],x[1]
-#define ARLIM_3D(x) &((int []){x[0], x[1], 0}[0])
-#define ZFILL(x) &((Real []){x[0], x[1], 0.}[0])
-#define BCREC_3D(x) &((int []){x[0], x[1], 0, x[2], x[3], 0}[0])
+#define ARLIM_3D(x) {x[0], x[1], 0}
+#define ZFILL(x) {x[0], x[1], 0.}
+#define BCREC_3D(x) {x[0], x[1], 0, x[2], x[3], 0}
 #elif   BL_SPACEDIM==3
 #define ARLIM_P(x)  const int&,const int&,const int&
 #define ARLIM(x)  x[0],x[1],x[2]
