diff -ruNbB pflotran-0.0.b681066-source/src/pflotran/pflotran_rxn.F90 pflotran-0.0.b681066-new/src/pflotran/pflotran_rxn.F90
--- pflotran-0.0.b681066-source/src/pflotran/pflotran_rxn.F90  2019-09-27 12:49:34.000000000 -0600
+++ pflotran-0.0.b681066-new/src/pflotran/pflotran_rxn.F90     2019-09-27 12:50:29.000000000 -0600
@@ -304,7 +304,7 @@
   call InputGetCommandLineString(string, option%global_prefix, option_found, option)
 
   PETSC_COMM_WORLD = MPI_COMM_WORLD
-  call PetscInitialize(PETSC_NULL_CHARACTER, ierr);CHKERRQ(ierr)
+  call PetscInitialize(PETSC_NULL_CHARACTER, ierr);
 
   input => InputCreate(IN_UNIT, option%input_filename, option)
 
@@ -379,7 +379,7 @@
   nullify(material_auxvars)
   call InputDestroy(input)
   call OptionDestroy(option)
-  call PetscFinalize(ierr);CHKERRQ(ierr)
+  call PetscFinalize(ierr);
   call MPI_Finalize(ierr)
 
 end program pflotran_rxn
diff -ruNbB pflotran-0.0.b681066-source/src/pflotran/reaction_sandbox_pnnl_cyber.F90 pflotran-0.0.b681066-new/src/pflotran/reaction_sandbox_pnnl_cyber.F90
--- pflotran-0.0.b681066-source/src/pflotran/reaction_sandbox_pnnl_cyber.F90
+++ pflotran-0.0.b681066-source/src/pflotran/reaction_sandbox_pnnl_cyber.F90
@@ -69,6 +69,8 @@
     PetscInt :: nrxn
     PetscInt :: offset_auxiliary
     PetscBool :: store_cumulative_mass
+    PetscBool :: mobile_biomass
+    PetscBool :: inhibit_by_nh4
     PetscInt, pointer :: nrow(:)
     PetscInt, pointer :: ncol(:)
     PetscInt, pointer :: irow(:,:)
@@ -147,6 +149,8 @@
   CyberCreate%offset_auxiliary = UNINITIALIZED_INTEGER
   CyberCreate%carbon_consumption_species = ''
   CyberCreate%store_cumulative_mass = PETSC_FALSE
+  CyberCreate%mobile_biomass = PETSC_TRUE
+  CyberCreate%inhibit_by_nh4 = PETSC_FALSE
   nullify(CyberCreate%nrow)
   nullify(CyberCreate%ncol)
   nullify(CyberCreate%irow)
@@ -272,6 +276,10 @@
                            error_string)
       case('STORE_CONSUMPTION_PRODUCTION')
         this%store_cumulative_mass = PETSC_TRUE
+      case('MOBILE_BIOMASS')
+        this%mobile_biomass = PETSC_TRUE
+      case('INHIBIT_BY_NH4')
+        this%inhibit_by_nh4 = PETSC_TRUE
       case default
         call InputKeywordUnrecognized(input,word,error_string,option)
     end select
@@ -326,9 +334,16 @@
   this%doc_id = &
     GetPrimarySpeciesIDFromName(word,reaction,option)
   word = 'C5H7O2N(aq)'
-  this%biomass_id = &
-    GetPrimarySpeciesIDFromName(word,reaction,option)
-!    GetImmobileSpeciesIDFromName(word,reaction%immobile,option) + reaction%offset_immobile
+  if (this%mobile_biomass) then
+    word = 'C5H7O2N(aq)'
+    this%biomass_id = &
+      GetPrimarySpeciesIDFromName(word,reaction,option)
+  else
+    word = 'C5H7O2N(im)'
+    this%biomass_id = &
+      GetImmobileSpeciesIDFromName(word,reaction%immobile,option) + &
+      reaction%offset_immobile
+  endif
   word = 'CO2(aq)'
   this%co2_id = &
     GetPrimarySpeciesIDFromName(word,reaction,option)
@@ -559,7 +574,6 @@
 
   PetscInt, parameter :: iphase = 1
   PetscReal :: L_water
-  PetscReal :: kg_water
   
   PetscInt :: i, j, irxn
 
@@ -590,14 +604,18 @@
   PetscReal :: temperature_scaling_factor
   PetscReal :: k1_scaled, k2_scaled, k3_scaled, k_deg_scaled
   PetscReal :: volume, rate_scale
+  PetscReal :: dX_dbiomass
+
+  PetscReal :: nh4_inhibition, dnh4_inhibition_dnh4
+  PetscReal :: tempreal
+  PetscReal :: inhibited_rate(3)
+  PetscReal, parameter :: threshold_f = 1.d8
 
   PetscReal :: rate(3), derivative_col(6,3)
   
   volume = material_auxvar%volume
   L_water = material_auxvar%porosity*global_auxvar%sat(iphase)* &
             volume*1.d3 ! m^3 -> L
-  kg_water = material_auxvar%porosity*global_auxvar%sat(iphase)* &
-             global_auxvar%den_kg(iphase)*volume
 
   molality_to_molarity = global_auxvar%den_kg(iphase)*1.d-3
     
@@ -627,9 +645,30 @@
         rt_auxvar%pri_act_coef(this%n2_id)*molality_to_molarity
   Cdoc = rt_auxvar%pri_molal(this%doc_id)* &
          rt_auxvar%pri_act_coef(this%doc_id)*molality_to_molarity
-!  X = rt_auxvar%immobile(this%biomass_id-reaction%offset_immobile)
-  X = rt_auxvar%pri_molal(this%biomass_id)* &
-      rt_auxvar%pri_act_coef(this%biomass_id)*molality_to_molarity
+  if (this%mobile_biomass) then
+    X = rt_auxvar%pri_molal(this%biomass_id)* &
+        rt_auxvar%pri_act_coef(this%biomass_id)*molality_to_molarity
+    dX_dbiomass = L_water/volume
+    ! aqueous units are mol/L. convert to mol/m^3
+    X = X*dX_dbiomass
+    dX_dbiomass = dX_dbiomass* &
+                  rt_auxvar%pri_act_coef(this%biomass_id)*molality_to_molarity
+  else
+    X = rt_auxvar%immobile(this%biomass_id-reaction%offset_immobile)
+    dX_dbiomass =  1.d0
+  endif
+
+  nh4_inhibition = 1.d0
+  dnh4_inhibition_dnh4 = 0.d0
+  if (this%inhibit_by_nh4) then
+    tempreal = (Cnh4 - 1.d6)*threshold_f
+    nh4_inhibition = 0.5d0 + atan(tempreal)/PI
+    ! derivative of atan(X) = 1 / (1 + X^2) dX
+    dnh4_inhibition_dnh4 = threshold_f * &
+                           rt_auxvar%pri_act_coef(this%nh4_id) * &
+                           molality_to_molarity / &
+                           (1.d0 + tempreal*tempreal) / PI
+  endif
   
   k1_scaled = this%k1 * temperature_scaling_factor
   k2_scaled = this%k2 * temperature_scaling_factor
@@ -670,31 +709,27 @@
   rate(1) = u1*r1kin  ! mol/mol biomass/sec
   rate(2) = u2*r2kin
   rate(3) = u3*r3kin
+
+  inhibited_rate(:) = rate(:) * nh4_inhibition
   
   do irxn = 1, this%nrxn
     do i = 1, this%nrow(irxn)
       ! mol/sec
       ! X is in [M]
       Residual(this%irow(i,irxn)) = Residual(this%irow(i,irxn)) - &
-        this%stoich_row(i,irxn) * rate(irxn) * X * &
-        ! if biomass is aqueous multiply by L_water
-        ! if biomass is immobile multiply by volume
-        L_water
+        this%stoich_row(i,irxn) * inhibited_rate(irxn) * X * volume
     enddo
   enddo
   
   ! decay of biomass
-  ! if biomass is aqueous multiply by L_water
-  ! if biomass is immobile multiply by volume
   Residual(this%biomass_id) = Residual(this%biomass_id) + &
-                              k_deg_scaled * X * L_water
+                              k_deg_scaled * X * volume
 
   ! production of doc by biomass decay
   ! note the addition
   ! mol/sec
   Residual(this%doc_id) = Residual(this%doc_id) - &
-!                          k_deg_scaled/this%f_act * X * L_water
-                          5.d0*k_deg_scaled * X * L_water
+                          5.d0*k_deg_scaled * X * volume
                  
   ! calculate carbon consumption
   if (this%carbon_consumption_species_id > 0) then
@@ -705,49 +740,46 @@
   
   if (this%store_cumulative_mass) then
     ! rate units are mol/mol biomass/sec
-    ! if biomass is aqueous, multiply by L_water and divide by volume
-    rate_scale = X * L_water / volume
-    ! if biomass is immobile, do nothing unit units are per m^3 bulk
-    !rate_scale = X 
+    rate_scale = X
     ! all "scaled" rates here are moles/m^3-sec
     ! nh4
     i = this%offset_auxiliary + NH4_MASS_STORAGE_INDEX
     rt_auxvar%auxiliary_data(i) = &
       ! stoichiometries on left side of reaction are negative
-      -1.d0 * rate(ONE_INTEGER) * this%stoich_1_nh4 * rate_scale
+      -1.d0 * inhibited_rate(ONE_INTEGER) * this%stoich_1_nh4 * rate_scale
     rt_auxvar%auxiliary_data(i) = rt_auxvar%auxiliary_data(i) - &
-      rate(TWO_INTEGER) * this%stoich_2_nh4 * rate_scale
+      inhibited_rate(TWO_INTEGER) * this%stoich_2_nh4 * rate_scale
     rt_auxvar%auxiliary_data(i) = rt_auxvar%auxiliary_data(i) - &
-      rate(THREE_INTEGER) * this%stoich_3_nh4 * rate_scale
+      inhibited_rate(THREE_INTEGER) * this%stoich_3_nh4 * rate_scale
     ! no3
     i = this%offset_auxiliary + NO3_MASS_STORAGE_INDEX
     rt_auxvar%auxiliary_data(i) = &
-      -1.d0 * rate(ONE_INTEGER) * this%stoich_1_no3 * rate_scale
+      -1.d0 * inhibited_rate(ONE_INTEGER) * this%stoich_1_no3 * rate_scale
     ! no2
     i = this%offset_auxiliary + NO2_MASS_STORAGE_INDEX
     rt_auxvar%auxiliary_data(i) = &
-      -1.d0 * rate(TWO_INTEGER) * this%stoich_2_no2 * rate_scale
+      -1.d0 * inhibited_rate(TWO_INTEGER) * this%stoich_2_no2 * rate_scale
     ! o2
     i = this%offset_auxiliary + O2_MASS_STORAGE_INDEX
     rt_auxvar%auxiliary_data(i) = &
-      -1.d0 * rate(THREE_INTEGER) * this%stoich_3_o2 * rate_scale
+      -1.d0 * inhibited_rate(THREE_INTEGER) * this%stoich_3_o2 * rate_scale
     ! doc
     i = this%offset_auxiliary + DOC_MASS_STORAGE_INDEX
     rt_auxvar%auxiliary_data(i) = &
-      -1.d0 * rate(ONE_INTEGER) * this%stoich_1_doc * rate_scale
+      -1.d0 * inhibited_rate(ONE_INTEGER) * this%stoich_1_doc * rate_scale
     rt_auxvar%auxiliary_data(i) = rt_auxvar%auxiliary_data(i) - &
-      rate(TWO_INTEGER) * this%stoich_2_doc * rate_scale
+      inhibited_rate(TWO_INTEGER) * this%stoich_2_doc * rate_scale
     rt_auxvar%auxiliary_data(i) = rt_auxvar%auxiliary_data(i) - &
-      rate(THREE_INTEGER) * this%stoich_3_doc * rate_scale
+      inhibited_rate(THREE_INTEGER) * this%stoich_3_doc * rate_scale
     ! co2
     i = this%offset_auxiliary + CO2_MASS_STORAGE_INDEX
     rt_auxvar%auxiliary_data(i) = &
       ! stoichiometries on right side of reaction are positive
-      rate(ONE_INTEGER) * this%stoich_1_co2 * rate_scale
+      inhibited_rate(ONE_INTEGER) * this%stoich_1_co2 * rate_scale
     rt_auxvar%auxiliary_data(i) = rt_auxvar%auxiliary_data(i) + &
-      rate(TWO_INTEGER) * this%stoich_2_co2 * rate_scale
+      inhibited_rate(TWO_INTEGER) * this%stoich_2_co2 * rate_scale
     rt_auxvar%auxiliary_data(i) = rt_auxvar%auxiliary_data(i) + &
-      rate(THREE_INTEGER) * this%stoich_3_co2 * rate_scale
+      inhibited_rate(THREE_INTEGER) * this%stoich_3_co2 * rate_scale
   endif
   
   if (compute_derivative) then
@@ -834,37 +866,47 @@
     derivative_col(4,irxn) = dr3_do2      
     
     ! fill the Jacobian
-    ! units = kg water/sec. Multiply by kg_water
     do irxn = 1, this%nrxn
       do j = 1, this%ncol(irxn)
         do i = 1, this%nrow(irxn)
           Jacobian(this%irow(i,irxn),this%icol(j,irxn)) = &
             Jacobian(this%irow(i,irxn),this%icol(j,irxn)) - &
-            this%stoich_row(i,irxn) * derivative_col(j,irxn) * X * kg_water
+            ! units of derivative_col = kg water/mol biomass/sec
+            this%stoich_row(i,irxn) * derivative_col(j,irxn) * &
+            nh4_inhibition * &
+            X * volume
         enddo
       enddo
-      ! if biomass is aqueous, units = kg water/sec. Multiply by kg_water
-      ! if biomass is immobile, units = m^3 bulk/sec. Multiply by volume
+      ! nh4 inhibition
+      do i = 1, this%nrow(irxn)
+        ! units = kg water/sec
+        Jacobian(this%irow(i,irxn),this%nh4_id) = &
+          Jacobian(this%irow(i,irxn),this%nh4_id) - &
+          ! units of derivative_col = kg water/mol biomass/sec
+          this%stoich_row(i,irxn) * rate(irxn) * &
+          dnh4_inhibition_dnh4 * &
+          X * volume
+      enddo
       do i = 1, this%nrow(irxn)
+        ! units = mol/mol biomass/m^3 bulk/sec
         Jacobian(this%irow(i,irxn),this%biomass_id) = &
           Jacobian(this%irow(i,irxn),this%biomass_id) - &
-           this%stoich_row(i,irxn) * rate(irxn) * kg_water
+          ! units of rate = mol/mol biomass/sec
+          this%stoich_row(i,irxn) * inhibited_rate(irxn) * dX_dbiomass * volume
       enddo
     enddo 
 
     ! decay of biomass
-    ! if biomass is aqueous, units = kg water/sec. Multiply by kg_water
-    ! if biomass is immobile, units = m^3 bulk/sec. Multiply by volume
+    ! units = m^3 bulk/sec
     Jacobian(this%biomass_id,this%biomass_id) = &
       Jacobian(this%biomass_id,this%biomass_id) + &
-      k_deg_scaled * kg_water
+      k_deg_scaled * dX_dbiomass * volume
 
     ! production of doc by biomass decay
-    ! units = kg water/sec. Multiply by kg_water
+    ! units = kg water/sec
     Jacobian(this%doc_id,this%biomass_id) = &
       Jacobian(this%doc_id,this%biomass_id) - &
-!      k_deg_scaled/this%f_act * kg_water
-      5.d0*k_deg_scaled * kg_water
+      5.d0*k_deg_scaled * dX_dbiomass * volume
       
     ! calculate carbon consumption
     if (this%carbon_consumption_species_id > 0) then
